{
  "name": "plunk",
  "version": "0.1.8",
  "description": "Utility to submit current directory to plnkr.co",
  "maintainers": [
    {
      "name": "Ilya Kantor",
      "email": "iliakan@gmail.com",
      "url": "http://javascript.ru"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/iliakan/plunk.git"
  },
  "dependencies": {
    "async": "*",
    "home-dir": "*",
    "request": "*",
    "lodash": "*",
    "mime": "*",
    "nconf": "*",
    "winston": "*"
  },
  "bin": {
    "plunk": "bin/plunk"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "main": "index.js",
  "scripts": {
    "start": "node index",
    "test": "NODE_ENV=test mocha -t 5000"
  },
  "author": {
    "name": "Ilya Kantor",
    "email": "iliakan@gmail.com",
    "url": "http://javascript.ru/"
  },
  "license": "MIT",
  "readme": "A small utility to post current directory contents to http://plnkr.co/edit\n\nBefore usage, please:\n- Log in (sign up if needed) to http://github.com, and then\n- Log in to http://plnkr.co using github\n\nThis will establish a session which the utility will use to create and update plunks under your github username.\n\nUsage (while in target directory):\n```\nplunk \n```\n\nUsage (with explicit directory)\n```\nplunk path/to/dir\n```\n\nAt first run it will ask github credentials and then store the plunker authentication in `~/.plunk_config.json`. \nIt does not store login/password. Remove the file if you ever want to relogin.\n\nExclusions:\n- Ignores files starting with a dot `'.'`\n- Doesn't allow subdirectories\n- Doesn't allow files with MIME other than `text/*` or `*/json` or `*/javascript` (.html .js .css are fine)\n\nGotchas:\n\n- Saves current plunk metadata in the file `.plunk`, uses it to update the plunk properly\n- A once-created plunk is bound to current directory name. When you copy it into a new directory (or rename), `plunk` will create a brand-new plunk. \nI found this behavior helpful, because when I clone an existing directory into a new example, \nit makes me sure I will not overwrite an existing plunk. \n\nFor Developers:\n- It can run without questions if GITHUB_USERNAME and GITHUB_PASSWORD environment variables exist\n- STDOUT outputs a link to new/updated plunk\n- STDERR is for errors if any \n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/iliakan/plunk/issues"
  },
  "homepage": "https://github.com/iliakan/plunk",
  "_id": "plunk@0.1.8",
  "_shasum": "2fd2d0fefcb48ab9ecccb648bde2dd79a9e07bed",
  "_from": "plunk@",
  "_resolved": "https://registry.npmjs.org/plunk/-/plunk-0.1.8.tgz"
}
